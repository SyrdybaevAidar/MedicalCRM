@using MedicalCRM.Business.Models
@model MedicalCRM.Models.Patient.ConsultationViewModel;
@using MedicalCRM.DataAccess.Entities.UserEntities;
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> userManager;

@{
    ViewData["Title"] = "View";
    var user = await userManager.FindByNameAsync(User.Identity.Name);
}

<h1>View</h1>

<div>
    <h4>Подоброно о консультации</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DoctorName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DoctorName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PatientName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PatientName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recommendations)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recommendations)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Date)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Date)
        </dd>
        <dt class="col-sm-2">
            Диагноз
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Diseases)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Complaints)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Complaints)
        </dd>
    </dl>
</div>
@if (Model.Recept != null) {
    <table class="table">
        <thead>
            <tr>
                <th>
                    Препарат
                </th>
                <th>
                    Количество
                </th>
                <th>
                    Заметки
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var medicament in Model.Recept.Medicaments) {
                <tr>
                    <td>
                        @medicament.MedicamentName
                    </td>
                    <td>
                        @medicament.Count
                    </td>
                    <td>
                        @medicament.Note
                    </td>
                    <td>
                        @Html.ActionLink("Удалить из рецепта", "DeleteMedicament", "Recept", medicament.Id);
                    </td>
                </tr>

            }
        </tbody>
    </table>

    @if (user.UserType == MedicalCRM.DataAccess.Enums.UserType.Doctor) {
        @await Html.PartialAsync("AddMedicamentPartial", new MedicamentDTO(){ ReceptId = Model.Recept.Id})
        @Html.ActionLink("Отправить рецепт", "SendRecept","Patient", new { ReceptId = Model.Recept.Id});
    }
} else {
    if (user.UserType == MedicalCRM.DataAccess.Enums.UserType.Doctor) {
        <div>
        @Html.ActionLink("Создать рецепт", "Create", "Recept", new {consultationId = Model.ConsultationId});
        </div>
    }
}

<div>
    @Html.ActionLink("Редактировать", "Update", new { consultationId = Model.ConsultationId})
    <a asp-action="Index" asp-controller="Doctor">Вернуться обратно</a>
</div>
